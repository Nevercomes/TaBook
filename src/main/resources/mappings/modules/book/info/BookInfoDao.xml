<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nevercome.tabook.modules.book.dao.info.BookInfoDao">

    <cache type="com.nevercome.tabook.common.persistence.cache.MybatisRedisCache" />

    <!-- 以bookInstance为id的查询字段 -->
    <sql id="bookInfoColumns">
        a.id AS "id",
        a.id AS "bookInfoInstance.id",
        a.remarks AS "bookInfoInstance.remarks",
        a.book_class_id AS "bookInfoInstance.bookClassId",
        a.user_add_id AS "bookInfoInstance.userAddId",
        a.owner_id AS "bookInfoInstance.ownerId",
        a.holder_id AS "bookInfoInstance.holderId",
        a.school_id AS "bookInfoInstance.schoolId",
        a.campus_id AS "bookInfoInstance.campusId",
        a.status AS "bookInfoInstance.status",
        a.total_borrowed AS "bookInfoInstance.totalBorrowed",
        b.id AS "bookInfoClass.id",
        b.remarks AS "bookInfoClass.remarks",
        b.book_root_id AS "bookInfoClass.bookRootId",
        b.ISBN AS "bookInfoClass.ISBN",
        b.version AS "bookInfoClass.version",
        b.press AS "bookInfoClass.press",
        b.year AS "bookInfoClass.year",
        b.score AS "bookInfoClass.score",
        b.intro AS "bookInfoClass.intro",
        b.img_url AS "bookInfoClass.imgUrl",
        c.id AS "bookInfoRoot.id",
        c.remarks AS "bookInfoRoot.remarks",
        c.name AS "bookInfoRoot.name",
        c.author AS "bookInfoRoot.author",
        c.represent_id AS "bookInfoRoot.representId"
    </sql>

    <sql id="bookInfoJoins">
        LEFT JOIN book_info_class b ON a.book_class_id = b.id
        LEFT JOIN book_info_root c ON b.book_root_id = c.id
    </sql>

    <!-- 以bookInfoClass为id的查询字段 -->
    <sql id="bookInfoClassColumns">
        b.id AS "id",
        b.id AS "bookInfoClass.id",
        b.remarks AS "bookInfoClass.remarks",
        b.book_root_id AS "bookInfoClass.bookRootId",
        b.ISBN AS "bookInfoClass.ISBN",
        b.version AS "bookInfoClass.version",
        b.press AS "bookInfoClass.press",
        b.year AS "bookInfoClass.year",
        b.score AS "bookInfoClass.score",
        b.intro AS "bookInfoClass.intro",
        b.img_url AS "bookInfoClass.imgUrl",
        c.id AS "bookInfoRoot.id",
        c.remarks AS "bookInfoRoot.remarks",
        c.name AS "bookInfoRoot.name",
        c.author AS "bookInfoRoot.author",
        c.represent_id AS "bookInfoRoot.representId"
    </sql>

    <sql id="bookInfoClassJoins">
        LEFT JOIN book_info_root c ON b.book_root_id = c.id
    </sql>

    <!-- 以bookRootClass为id的查询字段 -->
    <sql id="bookInfoRootColumns">
        c.id AS "id",
        b.id AS "bookInfoClass.id",
        b.remarks AS "bookInfoClass.remarks",
        b.book_root_id AS "bookInfoClass.bookRootId",
        b.ISBN AS "bookInfoClass.ISBN",
        b.version AS "bookInfoClass.version",
        b.press AS "bookInfoClass.press",
        b.year AS "bookInfoClass.year",
        b.score AS "bookInfoClass.score",
        b.intro AS "bookInfoClass.intro",
        b.img_url AS "bookInfoClass.imgUrl",
        c.id AS "bookInfoRoot.id",
        c.remarks AS "bookInfoRoot.remarks",
        c.name AS "bookInfoRoot.name",
        c.author AS "bookInfoRoot.author",
        c.represent_id AS "bookInfoRoot.representId"
    </sql>

    <sql id="bookInfoRootJoins">
        LEFT JOIN book_info_class b ON c.represent_id = b.id
    </sql>

    <!-- 以bookInfoClass的数据统计字段 -->
    <sql id="bookClassStaColumns">

    </sql>

    <!-- 以bookRootClass的数据统计字段 -->
    <sql id="bookRootStaColumns">

    </sql>

    <select id="get" resultType="BookInfo">

    </select>

    <select id="getByBookInstanceId" resultType="BookInfo" useCache="true">
        SELECT
        <include refid="bookInfoColumns"/>
        FROM book_info_instance a
        <include refid="bookInfoJoins"/>
        WHERE a.id = #{bookInfoInstance.id}
    </select>

    <select id="getByBookClassId" resultType="BookInfo" useCache="true">
        SELECT
        <include refid="bookInfoClassColumns"/>
        FROM book_info_class b
        <include refid="bookInfoClassJoins"/>
        WHERE b.id = #{bookInfoClass.id}
    </select>

    <select id="getByBookRootId" resultType="BookInfo" useCache="true">
        SELECT
        <include refid="bookInfoRootColumns"/>
        FROM book_info_root c
        <include refid="bookInfoRootJoins"/>
        WHERE c.id = #{bookInfoRoot.id}
    </select>

    <select id="findList" resultType="BookInfo" useCache="true">
        SELECT
        <include refid="bookInfoColumns"/>
        FROM book_info_instance a
        <include refid="bookInfoJoins"/>
        <where>

        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>

            </otherwise>
        </choose>
    </select>

    <select id="findListRefBookClass" resultType="BookInfo" useCache="true">
        SELECT
        <include refid="bookInfoClassColumns"/>
        FROM book_info_root b
        <include refid="bookInfoClassJoins"/>
        <where>

        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>

            </otherwise>
        </choose>
    </select>

    <select id="findListRefBookRoot" resultType="BookInfo" useCache="true">
        SELECT
        <include refid="bookInfoRootColumns"/>
        FROM book_info_root b
        <include refid="bookInfoRootJoins"/>
        <where>

        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>

            </otherwise>
        </choose>
    </select>

</mapper>