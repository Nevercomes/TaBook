<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <description>Shiro Configuration</description>

    <!-- 加载配置属性文件 -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath:tabook.properties"/>

    <!--安全认证过滤器-->
    <bean class="org.apache.shiro.spring.web.ShiroFilterFactoryBean" id="shiroFilter">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="${adminPath}/login"/>
        <!--<property name="unauthorizedUrl" value="${adminPath}/toLogin"/>-->
        <property name="filterChainDefinitions">
            <value>
                /static/** = anon
                /userfiles/** = anon
                {adminPath}/login = authc
                {adminPath}/** = user
            </value>
        </property>
        <!--<property name="filters">-->
            <!--<map>-->
                <!--<entry key="authc" value-ref="formAuthenticationFilter"/>-->
            <!--</map>-->
        <!--</property>-->
    </bean>

    <!--创建SecurityManager-->
    <bean class="org.apache.shiro.web.mgt.DefaultWebSecurityManager" id="securityManager">
        <!--注入realm-->
        <property name="realm" ref="systemAuthorizingRealm"/>
        <!--注入sessionManager-->
        <property name="sessionManager" ref="sessionManager" />
         <!--注入cacheManager-->
        <property name="cacheManager" ref="jedisCacheManager" />
    </bean>

    <!--Session管理配置-->
    <bean class="com.nevercome.tabook.common.security.shiro.session.SessionManager" id="sessionManager">
        <!--注入存储器-->
        <!--<property name="sessionDAO" ref="jedisSessionDAO" />-->

        <!--session超时时间 这里设置得和wx得一样-->
        <property name="globalSessionTimeout" value="${session.sessionTimeout}" />

        <!--清理孤立session-->
        <property name="sessionValidationInterval" value="${session.sessionTimeoutClean}"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>

        <!--设置session_id-->
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        <property name="sessionIdCookieEnabled" value="true"/>
    </bean>
    <!--指定SESSION-ID-->
    <bean class="org.apache.shiro.web.servlet.SimpleCookie" id="sessionIdCookie">
        <constructor-arg name="name" value="tabook-shiro-session" />
        <property name="path" value="/" />
    </bean>

    <!--Session存储配置-->
    <bean class="com.nevercome.tabook.common.security.shiro.session.JedisSessionDAO" id="jedisSessionDAO">
        <property name="sessionIdGenerator" ref="idGen" />
        <property name="sessionKeyPrefix" value="${redis.keyPrefix}_session_" />
    </bean>

    <!--Cache管理配置-->
    <bean class="com.nevercome.tabook.common.security.shiro.cache.JedisCacheManager" id="jedisCacheManager">
        <property name="cacheKeyPrefix" value="${redis.keyPrefix}_cache"/>
    </bean>

    <!--保证实现了Shiro内部lifecycle函数的bean执行-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!--AOP式方法级权限检查-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

</beans>